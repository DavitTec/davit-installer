# .env file for vscode.sh and other scripts
# Copy this file to .env and edit the values as needed
# Do not commit .env file to public repositories if it contains sensitive information
# Use .env-example as a template for new projects

# Project metadata
DOMAIN="your_domain_here"  # e.g., example, mydomain
HOST="your_hostname_here"  # e.g., server.example.org or localhost
AUTHOR="$USER:-$WHOAMI"
PROJECT_NAME="$DirectoryName"  # e.g., myproject
VERSION="0.0.1"  # e.g., 0.0.1, 1.0.0, 2.1.3  use semantic versioning https://semver.org/
CREATED="20250821-23:06" # TIMESTAMP format YYYYMMDD-HH:MM(:SS) - updated automatically
LAST_VISITED="2025-08-22 22:48:58"  # TIMESTAMP format YYYY-MM-DD HH:MM:SS - updated automatically
SYNC_LEVEL="patch"  # patch, minor, major - level at which to sync master manifest

# Directories
DirectoryName="$(basename "$PWD")"
OPT_DIR="/opt/${DOMAIN}"  # e.g., /opt/example, /opt/mydomain
BIN_DIR="${OPT_DIR}/bin" # e.g., /opt/example/bin, /opt/mydomain/bin for running scripts
DEV_DIR="${OPT_DIR}/development"    # e.g., /opt/example/development, /opt/mydomain/development for development projects
ROOT_DIR="${DEV_DIR}/${PROJECT_NAME}"   # e.g., /opt/example/development/myproject, /opt/mydomain/development/myproject
ARCHIVES_DIR="${DEV_DIR}/${PROJECT_NAME}/archives" # e.g., /opt/example/development/myproject/archives, not shared to remote GITREPOs
TEMP_DIR="${ROOT_DIR}/tmp/${PROJECT_NAME}" # e.g., /opt/example/development/myproject/tmp/myproject
TEST_DIR="${ROOT_DIR}/tests/${PROJECT_NAME}.log"  # e.g., /opt/example/development/myproject/tests/myproject.log and others

# Database file if applicable
DB_FILE="${ROOT_DIR}/data/files.json" # e.g., /opt/example/development/myproject/data/files.json

# Logging configuration
LOG_DIR="${ROOT_DIR}/logs" # e.g., /opt/example/development/myproject/logs for this workspace development project
LOG_FILE="${LOG_DIR}/${PROJECT_NAME}.log"   # e.g., /opt/example/development/myproject/logs/myproject.log and others

# Script-specific
REQUIREMENTS=true # true or false to check for requirements on startup  
SERVER="${HOST}"  # Server hostname (if applicable)

# Git configuration
GIT_ENABLED=true    # true or false to enable git features
GIT_TYPE="github"   # github, gitlab, bitbucket
GIT_USER="DavitTec" # used for git commits local _
GIT_IGNORE_TEMPLATE="node+shell+davit"  # e.g. templates for .gitignore, use '+' to add custom templates like 'node+python+java'   
GIT_IGNORE_FILE=".gitignore"  # e.g., .gitignore, .hgignore, etc.

# Github configuration
GITHUB_USER="${GIT_USER}"  # used for github only
GITHUB_URL="https://github.com/${GITHUB_USER}/${PROJECT_NAME}"
GITHUB_TOKEN="ghp_yourtokenhere"  # Replace with your actual token only on PRIVATE machines

# Tools and utilities
DIFF_TOOL="diff"  # diff, colordiff, vimdiff, etc
VISUAL_DIFF="meld" # e.g., meld, code --diff, etc

# Utilities configuration
# The following is used for excluding files/folders when creating an archive or doing a sync and cat2md utilities
EXCLUDE_PATTERNS="./.git/* ./logs/* ./public/* ./tmp/* ./.nx/* ./archives/* ./node_modules/* ./**/node_modules/* ./**/package-lock.json ./**/.gitkeep ./docs/hist/*"
EXCLUDE_EXTENSIONS="avi bmp doc docx flv gif gz ico jpeg jpg log mkv mov mp3 mp4 pdf png ppt pptx rar svg tar tiff tmp webm wmv xls xlsx zip bin exe dll so o a lib"
INCLUDE_EXTENSIONS="sh py js json md txt"  # NOT implemented yet

# Add project-specific variables below as needed
# For full-stack/monorepo projects, add LANG="bash,js,perl,c" or similar
# End of .env file for vscode.sh